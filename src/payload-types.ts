/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    tours: Tour;
    'contact-us': ContactUs;
    home: Home;
    'about-us': AboutUs;
    'privacy-policy': PrivacyPolicy;
    terms: Term;
    reviews: Review;
    cities: City;
    media: Media;
    posts: Post;
    types: Type;
    hotels: Hotel;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    tours: ToursSelect<false> | ToursSelect<true>;
    'contact-us': ContactUsSelect<false> | ContactUsSelect<true>;
    home: HomeSelect<false> | HomeSelect<true>;
    'about-us': AboutUsSelect<false> | AboutUsSelect<true>;
    'privacy-policy': PrivacyPolicySelect<false> | PrivacyPolicySelect<true>;
    terms: TermsSelect<false> | TermsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    cities: CitiesSelect<false> | CitiesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    types: TypesSelect<false> | TypesSelect<true>;
    hotels: HotelsSelect<false> | HotelsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: 'uz' | 'ru' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours".
 */
export interface Tour {
  id: number;
  title: string;
  duration: string;
  price: number;
  description: string;
  type: number | Type;
  cities: (number | City)[];
  locations?:
    | {
        from: number | City;
        to: number | City;
        transport?: string | null;
        date?: string | null;
        fromTime?: string | null;
        toTime?: string | null;
        duration?: string | null;
        id?: string | null;
      }[]
    | null;
  accommodation?:
    | {
        city: number | City;
        nights: number;
        hotel?: (number | Hotel)[] | null;
        id?: string | null;
      }[]
    | null;
  services?: {
    included?:
      | {
          title: string;
          id?: string | null;
        }[]
      | null;
    notIncluded?:
      | {
          title: string;
          id?: string | null;
        }[]
      | null;
  };
  itinerary?:
    | {
        day: string;
        activities?:
          | {
              activity?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  booking_pricing?:
    | {
        dateStart?: string | null;
        dateEnd?: string | null;
        pricePerAdult?: number | null;
        pricePerChild?: number | null;
        id?: string | null;
      }[]
    | null;
  images?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "types".
 */
export interface Type {
  id: number;
  title: string;
  description: string;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities".
 */
export interface City {
  id: number;
  name: string;
  description?: string | null;
  image: number | Media;
  link?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotels".
 */
export interface Hotel {
  id: number;
  name: string;
  city: number | City;
  description: string;
  address?: string | null;
  phone?: string | null;
  website?: string | null;
  rating?: ('1' | '2' | '3' | '4' | '5') | null;
  images?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        name: string;
        id?: string | null;
      }[]
    | null;
  policies: {
    checkIn: string;
    checkOut: string;
    cancellation?: string | null;
    pet?: string | null;
    children?: string | null;
    payment?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-us".
 */
export interface ContactUs {
  id: number;
  title: string;
  heading: string;
  subheading: string;
  form_info: {
    heading: string;
    subheading: string;
  };
  contact_info: {
    heading: string;
    subheading: string;
    phone: string;
    email: string;
    address: string;
    opening_hours: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: number;
  title: string;
  sections?:
    | (
        | {
            heading: string;
            subheading?: string | null;
            image?: (number | null) | Media;
            button?:
              | {
                  label?: string | null;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
            static_content?:
              | {
                  title?: string | null;
                  text?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            heading: string;
            subheading?: string | null;
            action_type: 'buttons' | 'date';
            button?:
              | {
                  label?: string | null;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
            date?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'special-offer-section';
          }
        | {
            heading: string;
            subheading?: string | null;
            button?:
              | {
                  label?: string | null;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
            cities?:
              | {
                  city: number | City;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cities';
          }
        | {
            heading: string;
            subheading?: string | null;
            button?:
              | {
                  label?: string | null;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
            tours?:
              | {
                  tour: (number | Tour)[];
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'tours';
          }
        | {
            heading: string;
            subheading?: string | null;
            contacts: {
              phone: string;
              email: string;
              address: string;
            };
            faqs?:
              | {
                  question: string;
                  answer: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'faq';
          }
        | {
            heading: string;
            subheading?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'testimonials';
          }
        | RecommendedTours
        | RecommendedCities
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecommendedTours".
 */
export interface RecommendedTours {
  heading?: string | null;
  subheading?: string | null;
  tours: (number | Tour)[];
  button?: {
    label?: string | null;
    link?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'recommended-tours';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecommendedCities".
 */
export interface RecommendedCities {
  heading?: string | null;
  subheading?: string | null;
  cities: (number | City)[];
  button?: {
    label?: string | null;
    link?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'recommended-cities';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-us".
 */
export interface AboutUs {
  id: number;
  title: string;
  sections?:
    | (
        | {
            heading: string;
            subheading?: string | null;
            'image-group'?:
              | {
                  image?: (number | null) | Media;
                  id?: string | null;
                }[]
              | null;
            button?: {
              label?: string | null;
              link?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'about-us-hero';
          }
        | {
            statistics?:
              | {
                  number?: string | null;
                  label?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'statistics';
          }
        | RecommendedTours
        | {
            heading: string;
            subheading?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'testimonials';
          }
        | {
            heading: string;
            subheading?: string | null;
            action_type: 'buttons' | 'date';
            button?:
              | {
                  label?: string | null;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
            date?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'special-offer-section';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-policy".
 */
export interface PrivacyPolicy {
  id: number;
  title: string;
  paragraphs?: {
    p1?: string | null;
    p2?: string | null;
  };
  sections?:
    | {
        heading: string;
        content?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'privacy-policy';
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms".
 */
export interface Term {
  id: number;
  title: string;
  paragraphs?: {
    p1?: string | null;
    p2?: string | null;
  };
  sections?:
    | {
        heading: string;
        content?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'terms';
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  name: string;
  rating: number;
  comment: string;
  tour: number | Tour;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  image: number | Media;
  title: string;
  content?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  gallery?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'tours';
        value: number | Tour;
      } | null)
    | ({
        relationTo: 'contact-us';
        value: number | ContactUs;
      } | null)
    | ({
        relationTo: 'home';
        value: number | Home;
      } | null)
    | ({
        relationTo: 'about-us';
        value: number | AboutUs;
      } | null)
    | ({
        relationTo: 'privacy-policy';
        value: number | PrivacyPolicy;
      } | null)
    | ({
        relationTo: 'terms';
        value: number | Term;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'cities';
        value: number | City;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'types';
        value: number | Type;
      } | null)
    | ({
        relationTo: 'hotels';
        value: number | Hotel;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours_select".
 */
export interface ToursSelect<T extends boolean = true> {
  title?: T;
  duration?: T;
  price?: T;
  description?: T;
  type?: T;
  cities?: T;
  locations?:
    | T
    | {
        from?: T;
        to?: T;
        transport?: T;
        date?: T;
        fromTime?: T;
        toTime?: T;
        duration?: T;
        id?: T;
      };
  accommodation?:
    | T
    | {
        city?: T;
        nights?: T;
        hotel?: T;
        id?: T;
      };
  services?:
    | T
    | {
        included?:
          | T
          | {
              title?: T;
              id?: T;
            };
        notIncluded?:
          | T
          | {
              title?: T;
              id?: T;
            };
      };
  itinerary?:
    | T
    | {
        day?: T;
        activities?:
          | T
          | {
              activity?: T;
              id?: T;
            };
        id?: T;
      };
  booking_pricing?:
    | T
    | {
        dateStart?: T;
        dateEnd?: T;
        pricePerAdult?: T;
        pricePerChild?: T;
        id?: T;
      };
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-us_select".
 */
export interface ContactUsSelect<T extends boolean = true> {
  title?: T;
  heading?: T;
  subheading?: T;
  form_info?:
    | T
    | {
        heading?: T;
        subheading?: T;
      };
  contact_info?:
    | T
    | {
        heading?: T;
        subheading?: T;
        phone?: T;
        email?: T;
        address?: T;
        opening_hours?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  title?: T;
  sections?:
    | T
    | {
        hero?:
          | T
          | {
              heading?: T;
              subheading?: T;
              image?: T;
              button?:
                | T
                | {
                    label?: T;
                    link?: T;
                    id?: T;
                  };
              static_content?:
                | T
                | {
                    title?: T;
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'special-offer-section'?:
          | T
          | {
              heading?: T;
              subheading?: T;
              action_type?: T;
              button?:
                | T
                | {
                    label?: T;
                    link?: T;
                    id?: T;
                  };
              date?: T;
              id?: T;
              blockName?: T;
            };
        cities?:
          | T
          | {
              heading?: T;
              subheading?: T;
              button?:
                | T
                | {
                    label?: T;
                    link?: T;
                    id?: T;
                  };
              cities?:
                | T
                | {
                    city?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        tours?:
          | T
          | {
              heading?: T;
              subheading?: T;
              button?:
                | T
                | {
                    label?: T;
                    link?: T;
                    id?: T;
                  };
              tours?:
                | T
                | {
                    tour?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        faq?:
          | T
          | {
              heading?: T;
              subheading?: T;
              contacts?:
                | T
                | {
                    phone?: T;
                    email?: T;
                    address?: T;
                  };
              faqs?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        testimonials?:
          | T
          | {
              heading?: T;
              subheading?: T;
              id?: T;
              blockName?: T;
            };
        'recommended-tours'?: T | RecommendedToursSelect<T>;
        'recommended-cities'?: T | RecommendedCitiesSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecommendedTours_select".
 */
export interface RecommendedToursSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  tours?: T;
  button?:
    | T
    | {
        label?: T;
        link?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecommendedCities_select".
 */
export interface RecommendedCitiesSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  cities?: T;
  button?:
    | T
    | {
        label?: T;
        link?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-us_select".
 */
export interface AboutUsSelect<T extends boolean = true> {
  title?: T;
  sections?:
    | T
    | {
        'about-us-hero'?:
          | T
          | {
              heading?: T;
              subheading?: T;
              'image-group'?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              button?:
                | T
                | {
                    label?: T;
                    link?: T;
                  };
              id?: T;
              blockName?: T;
            };
        statistics?:
          | T
          | {
              statistics?:
                | T
                | {
                    number?: T;
                    label?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'recommended-tours'?: T | RecommendedToursSelect<T>;
        testimonials?:
          | T
          | {
              heading?: T;
              subheading?: T;
              id?: T;
              blockName?: T;
            };
        'special-offer-section'?:
          | T
          | {
              heading?: T;
              subheading?: T;
              action_type?: T;
              button?:
                | T
                | {
                    label?: T;
                    link?: T;
                    id?: T;
                  };
              date?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-policy_select".
 */
export interface PrivacyPolicySelect<T extends boolean = true> {
  title?: T;
  paragraphs?:
    | T
    | {
        p1?: T;
        p2?: T;
      };
  sections?:
    | T
    | {
        'privacy-policy'?:
          | T
          | {
              heading?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms_select".
 */
export interface TermsSelect<T extends boolean = true> {
  title?: T;
  paragraphs?:
    | T
    | {
        p1?: T;
        p2?: T;
      };
  sections?:
    | T
    | {
        terms?:
          | T
          | {
              heading?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  name?: T;
  rating?: T;
  comment?: T;
  tour?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities_select".
 */
export interface CitiesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  image?: T;
  link?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        desktop?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  image?: T;
  title?: T;
  content?:
    | T
    | {
        text?: T;
        id?: T;
      };
  gallery?:
    | T
    | {
        image?: T;
        id?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "types_select".
 */
export interface TypesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotels_select".
 */
export interface HotelsSelect<T extends boolean = true> {
  name?: T;
  city?: T;
  description?: T;
  address?: T;
  phone?: T;
  website?: T;
  rating?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  features?:
    | T
    | {
        name?: T;
        id?: T;
      };
  policies?:
    | T
    | {
        checkIn?: T;
        checkOut?: T;
        cancellation?: T;
        pet?: T;
        children?: T;
        payment?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo: number | Media;
  navigations?:
    | {
        label: string;
        url: string;
        isExternal?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  logo?: (number | null) | Media;
  description?: string | null;
  socialLinks?:
    | {
        title: string;
        link: string;
        icon:
          | 'facebook'
          | 'instagram'
          | 'telegram'
          | 'whatsapp'
          | 'twitter'
          | 'youtube'
          | 'linkedin'
          | 'email'
          | 'phone'
          | 'website';
        id?: string | null;
      }[]
    | null;
  navigationLinks?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  licenceLinks?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  contactLinks?:
    | {
        type: 'phone' | 'email' | 'address';
        value: string;
        icon: 'phone' | 'email' | 'address';
        id?: string | null;
      }[]
    | null;
  copyright?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  navigations?:
    | T
    | {
        label?: T;
        url?: T;
        isExternal?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  logo?: T;
  description?: T;
  socialLinks?:
    | T
    | {
        title?: T;
        link?: T;
        icon?: T;
        id?: T;
      };
  navigationLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  licenceLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  contactLinks?:
    | T
    | {
        type?: T;
        value?: T;
        icon?: T;
        id?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}